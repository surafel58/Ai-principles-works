from question3 import StateSpaceGraph

# Example usage
graph = StateSpaceGraph()

# Adding edges from Figure 3 with heurstic and weights
graph.add_edge("Kartum", "Humera", 21)
graph.add_edge("Kartum", "Metema", 19)
graph.add_edge("Metema", "Gondar", 7)
graph.add_edge("Humera", "Shire", 8)
graph.add_edge("Humera", "Gondar", 9)
graph.add_edge("Shire", "Axum", 2)
graph.add_edge("Shire", "Debarke", 9)
graph.add_edge("Debarke", "Gondar", 4)
graph.add_edge("Axum", "Adwa", 1)
graph.add_edge("Axum", "Asmera", 5)
graph.add_edge("Adwa", "Adigrat", 4)
graph.add_edge("Adwa", "Mekelle", 7)
graph.add_edge("Adigrat", "Mekelle", 4)
graph.add_edge("Adigrat", "Asmera", 4)
graph.add_edge("Mekelle", "Sekota", 9)
graph.add_edge("Mekelle", "Alamata", 5)
graph.add_edge("Sekota", "Alamata", 6)
graph.add_edge("Sekota", "Lalibela", 9)
graph.add_edge("Lalibela", "Debre Tabor", 8)
graph.add_edge("Lalibela", "Woldia", 7)
graph.add_edge("Alamata", "Woldia", 3)
graph.add_edge("Alamata", "Samara", 11)
graph.add_edge("Samara", "Woldia", 8)
graph.add_edge("Samara", "Fanti Rasu", 7)
graph.add_edge("Fanti Rasu", "Kilbet Rasu", 6)
graph.add_edge("Debre Tabor", "Bahir Dar", 4)
graph.add_edge("Bahir Dar", "Azezo", 7)
graph.add_edge("Azezo", "Metema", 7)
graph.add_edge("Gondar", "Azezo", 1)
graph.add_edge("Gondar", "Debre Tabor", 6)
graph.add_edge("Bahir Dar", "Finote Selam", 6)
graph.add_edge("Bahir Dar", "Injibara", 4)
graph.add_edge("Bahir Dar", "Metekel", 11)
graph.add_edge("Injibara", "Finote Selam", 2)
graph.add_edge("Finote Selam", "Debre Markos", 3)
graph.add_edge("Debre Markos", "Debre Sina", 17)
graph.add_edge("Debre Sina", "Debre Birhan", 2)
graph.add_edge("Debre Sina", "Kemise", 7)
graph.add_edge("Kemise", "Dessie", 4)
graph.add_edge("Dessie", "Woldia", 6)
graph.add_edge("Debre Markos", "Addis Ababa", 13)
graph.add_edge("Debre Birhan", "Addis Ababa", 5)
graph.add_edge("Addis Ababa", "Ambo", 5)
graph.add_edge("Addis Ababa", "Adama", 3)
graph.add_edge("Adama", "Matahara", 3)
graph.add_edge("Matahara", "Awash", 1)
graph.add_edge("Awash", "Gabi Rasu", 5)
graph.add_edge("Awash", "Chiro", 4)
graph.add_edge("Gabi Rasu", "Samara", 9)
graph.add_edge("Chiro", "Dire Dawa", 8)
graph.add_edge("Dire Dawa", "Harar", 4)
graph.add_edge("Harar", "Babile", 2)
graph.add_edge("Babile", "Jigjiga", 3)
graph.add_edge("Jigjiga", "Dega Habur", 5)
graph.add_edge("Dega Habur", "Kebri Dehar", 6)
graph.add_edge("Kebri Dehar", "Werder", 6)
graph.add_edge("Babile", "Goba", 28)
graph.add_edge("Goba", "Sof Oumer", 6)
graph.add_edge("Goba", "Robe", 18)
graph.add_edge("Sof Oumer", "Robe", 23)
graph.add_edge("Robe", "Liben", 11)
graph.add_edge("Robe", "Dodolla", 13)
graph.add_edge("Sof Oumer", "Gode", 23)
graph.add_edge("Kebri Dehar", "Gode", 5)
graph.add_edge("Gode", "Dollo", 17)
graph.add_edge("Gode", "Mokadisho", 22)
graph.add_edge("Dodolla", "Shashemene", 3)
graph.add_edge("Shashemene", "Hawassa", 1)
graph.add_edge("Hawassa", "Dilla", 3)
graph.add_edge("Dilla", "Bule Hora", 4)
graph.add_edge("Bule Hora", "Yabello", 2)
graph.add_edge("Yabello", "Konso", 3)
graph.add_edge("Konso", "Arba Minch", 4)
graph.add_edge("Arba Minch", "Wolaita Sodo", 4)
graph.add_edge("Wolaita Sodo", "Hossana", 4)
graph.add_edge("Hossana", "Shashemene", 7)
graph.add_edge("Yabello", "Moyale", 6)
graph.add_edge("Liben", "Moyale", 11)
graph.add_edge("Dollo", "Moyale", 18)
graph.add_edge("Mokadisho", "Moyale", 40)
graph.add_edge("Moyale", "Nairobi", 22)
graph.add_edge("Arba Minch", "Basketo", 10)
graph.add_edge("Basketo", "Bench Maji", 5)
graph.add_edge("Bench Maji", "Juba", 22)
graph.add_edge("Wolaita Sodo", "Dawaro", 6)
graph.add_edge("Dawaro", "Bonga", 10)
graph.add_edge("Bonga", "Jimma", 4)
graph.add_edge("Bonga", "Mezan Teferi", 4)
graph.add_edge("Bonga", "Tepi", 8)
graph.add_edge("Tepi", "Mezan Teferi", 4)
graph.add_edge("Jimma", "Bedelle", 7)
graph.add_edge("Bedelle", "Nekemte", 4)
graph.add_edge("Nekemte", "Gimbi", 4)
graph.add_edge("Nekemte", "Ambo", 9)
graph.add_edge("Gimbi", "Dembi Dolo", 6)
graph.add_edge("Gimbi", "Assosa", 8)
graph.add_edge("Dembi Dolo", "Assosa", 12)
graph.add_edge("Dembi Dolo", "Gambella", 4)
graph.add_edge("Gambella", "Gore", 5)
graph.add_edge("Gore", "Tepi", 9)
graph.add_edge("Gore", "Bedelle", 6)
graph.add_edge("Jimma", "Wolkite", 8)
graph.add_edge("Wolkite", "Ambo", 6)
graph.add_edge("Wolkite", "Worabe", 5)
graph.add_edge("Wolkite", "Buta Jirra", 4)
graph.add_edge("Hossana", "Worabe", 2)
graph.add_edge("Worabe", "Buta Jirra", 2)
graph.add_edge("Buta Jirra", "Batu", 2)
graph.add_edge("Batu", "Shashemene", 3)
graph.add_edge("Batu", "Adama", 4)
graph.add_edge("Adama", "Assella", 4)
graph.add_edge("Dodolla", "Assasa", 1)

# Set heuristic values based on the map
graph.set_heuristic("Kartum", 81)
graph.set_heuristic("Humera", 65)
graph.set_heuristic("Shire", 67)
graph.set_heuristic("Axum", 66)
graph.set_heuristic("Adwa", 65)
graph.set_heuristic("Adigrat", 62)
graph.set_heuristic("Mekelle", 58)
graph.set_heuristic("Sekota", 59)
graph.set_heuristic("Lalibela", 57)
graph.set_heuristic("Debre Tabor", 52)
graph.set_heuristic("Bahir Dar", 48)
graph.set_heuristic("Azezo", 55)
graph.set_heuristic("Metema", 62)
graph.set_heuristic("Gondar", 56)
graph.set_heuristic("Debarke", 60)
graph.set_heuristic("Asmera", 68)
graph.set_heuristic("Alamata", 59)
graph.set_heuristic("Woldia", 50)
graph.set_heuristic("Dessie", 44)
graph.set_heuristic("Kemise", 40)
graph.set_heuristic("Debre Markos", 39)
graph.set_heuristic("Finote Selam", 42)
graph.set_heuristic("Injibara", 44)
graph.set_heuristic("Metekel", 59)
graph.set_heuristic("Assosa", 51)
graph.set_heuristic("Gambella", 51)
graph.set_heuristic("Tepi", 41)
graph.set_heuristic("Bonga", 33)
graph.set_heuristic("Jimma", 33)
graph.set_heuristic("Bedele", 40)
graph.set_heuristic("Nekemte", 39)
graph.set_heuristic("Gimbi", 43)
graph.set_heuristic("Ambo", 31)
graph.set_heuristic("Addis Ababa", 26)
graph.set_heuristic("Debre Birhan", 31)
graph.set_heuristic("Fanti Rasu", 49)
graph.set_heuristic("Kilbet Rasu", 55)
graph.set_heuristic("Samarra", 42)
graph.set_heuristic("Adama", 23)
graph.set_heuristic("Matahara", 23)
graph.set_heuristic("Awash", 21)
graph.set_heuristic("Chiro", 31)
graph.set_heuristic("Dire Dawa", 31)
graph.set_heuristic("Harar", 35)
graph.set_heuristic("Babile", 37)
graph.set_heuristic("Jigjiga", 40)
graph.set_heuristic("Dega Habur", 45)
graph.set_heuristic("Kebri Dehar", 40)
graph.set_heuristic("Gode", 35)
graph.set_heuristic("Dollo", 18)
graph.set_heuristic("Moyale", 0)
graph.set_heuristic("Worabe", 22)
graph.set_heuristic("Buta Jirra", 21)
graph.set_heuristic("Batu", 19)
graph.set_heuristic("Assella", 22)
graph.set_heuristic("Assasa", 18)
graph.set_heuristic("Dodolla", 19)
graph.set_heuristic("Goba", 40)
graph.set_heuristic("Sof Oumer", 45)
graph.set_heuristic("Liben", 40)
graph.set_heuristic("Dilla", 12)
graph.set_heuristic("Bule Hora", 8)
graph.set_heuristic("Yabello", 6)
graph.set_heuristic("Konso", 9)
graph.set_heuristic("Arba Minch", 13)
graph.set_heuristic("Wolaita Sodo", 17)
graph.set_heuristic("Hossana", 21)
graph.set_heuristic("Shashemene", 16)
graph.set_heuristic("Hawassa", 15)
graph.set_heuristic("Dawro", 23)
graph.set_heuristic("Bench Maji", 28)
graph.set_heuristic("Basketo", 23)
graph.set_heuristic("Gore", 46)
graph.set_heuristic("Mezan Teferi", 37)
graph.set_heuristic("Mokadisho", 40)
graph.set_heuristic("Debre Sina", 33)
graph.set_heuristic("Gabi Rasu", 32)
graph.set_heuristic("Dembi Dolo", 49)
graph.set_heuristic("Werder", 46)
graph.set_heuristic("Juba", 50)
graph.set_heuristic("Nairobi", 22)
graph.set_heuristic("Wolkite", 25)
graph.set_heuristic("Bedelle", 40)
graph.set_heuristic("Dawaro", 23)
graph.set_heuristic("Samara", 42)
graph.set_heuristic("Robe", 22)

start_state = "Addis Ababa"
goal_state = "Moyale"
path_cost, path = graph.a_star_search(start_state, goal_state)
print("A* Path from Addis Ababa to Moyale:", path, "with total cost:", path_cost)
from question3 import StateSpaceGraph

# Example usage
graph = StateSpaceGraph()

# Adding edges from Figure 3 with heurstic and weights
graph.add_edge("Kartum", "Humera", 21)
graph.add_edge("Kartum", "Metema", 19)
graph.add_edge("Humera", "Shire", 8)
graph.add_edge("Humera", "Metema", 7)
graph.add_edge("Shire", "Axum", 2)
graph.add_edge("Shire", "Debarke", 9)
graph.add_edge("Debarke", "Gondar", 4)
graph.add_edge("Axum", "Adwa", 1)
graph.add_edge("Adwa", "Adigrat", 5)
graph.add_edge("Adigrat", "Mekelle", 6)
graph.add_edge("Adigrat", "Asmara", 4)
graph.add_edge("Mekelle", "Sekota", 9)
graph.add_edge("Mekelle", "Alamata", 5)
graph.add_edge("Sekota", "Lalibela", 11)
graph.add_edge("Lalibela", "Debre Tabor", 8)
graph.add_edge("Debre Tabor", "Bahir Dar", 7)
graph.add_edge("Bahir Dar", "Azezo", 1)
graph.add_edge("Azezo", "Metema", 7)
graph.add_edge("Bahir Dar", "Finote Selam", 6)
graph.add_edge("Finote Selam", "Debre Markos", 3)
graph.add_edge("Debre Markos", "Debre Sina", 17)
graph.add_edge("Debre Markos", "Injibara", 2)
graph.add_edge("Injibara", "Metekel", 11)
graph.add_edge("Metekel", "Assosa", 12)
graph.add_edge("Assosa", "Gambela", 4)
graph.add_edge("Gambela", "Tepi", 9)
graph.add_edge("Tepi", "Bonga", 4)
graph.add_edge("Tepi", "Mezan Teferi", 8)
graph.add_edge("Bonga", "Jimma", 7)
graph.add_edge("Jimma", "Bedele", 5)
graph.add_edge("Bedele", "Nekemte", 6)
graph.add_edge("Nekemte", "Gimbi", 4)
graph.add_edge("Nekemte", "Ambo", 9)
graph.add_edge("Ambo", "Addis Ababa", 5)
graph.add_edge("Addis Ababa", "Debre Birhan", 8)
graph.add_edge("Debre Birhan", "Kemise", 6)
graph.add_edge("Kemise", "Dessie", 11)
graph.add_edge("Dessie", "Woldia", 8)
graph.add_edge("Woldia", "Alamata", 6)
graph.add_edge("Woldia", "Fanti Rasu", 7)
graph.add_edge("Fanti Rasu", "Kilbet Rasu", 6)
graph.add_edge("Kilbet Rasu", "Samarra", 11)
graph.add_edge("Addis Ababa", "Adama", 6)
graph.add_edge("Adama", "Matahara", 3)
graph.add_edge("Matahara", "Awash", 4)
graph.add_edge("Awash", "Chiro", 5)
graph.add_edge("Chiro", "Dire Dawa", 8)
graph.add_edge("Dire Dawa", "Harar", 4)
graph.add_edge("Harar", "Babile", 2)
graph.add_edge("Babile", "Jijiga", 3)
graph.add_edge("Jijiga", "Degehabur", 5)
graph.add_edge("Degehabur", "Kebri Dehar", 6)
graph.add_edge("Kebri Dehar", "Gode", 6)
graph.add_edge("Gode", "Dollo", 17)
graph.add_edge("Dollo", "Moyale", 22)
graph.add_edge("Moyale", "Yabello", 6)
graph.add_edge("Yabello", "Konso", 3)
graph.add_edge("Konso", "Arba Minch", 4)
graph.add_edge("Arba Minch", "Wolaita Sodo", 10)
graph.add_edge("Wolaita Sodo", "Hossana", 7)
graph.add_edge("Hossana", "Shashemene", 7)
graph.add_edge("Shashemene", "Hawassa", 3)
graph.add_edge("Hawassa", "Dilla", 3)
graph.add_edge("Dilla", "Bule Hora", 4)
graph.add_edge("Bule Hora", "Yabello", 3)
graph.add_edge("Shashemene", "Assasa", 4)
graph.add_edge("Assasa", "Dodola", 1)
graph.add_edge("Dodola", "Goba", 13)
graph.add_edge("Goba", "Bale", 18)
graph.add_edge("Bale", "Liben", 11)
graph.add_edge("Gode", "Liben", 23)
graph.add_edge("Liben", "Sof Oumer", 23)
graph.add_edge("Sof Oumer", "Bale", 23)
graph.add_edge("Sof Oumer", "Goba", 18)
graph.add_edge("Bench Maji", "Basketo", 5)
graph.add_edge("Basketo", "Juba", 22)


# Set heuristic values based on the map
graph.set_heuristic("Addis Ababa", 26)
graph.set_heuristic("Ambo", 31)
graph.set_heuristic("Nekemte", 39)
graph.set_heuristic("Debre Birhan", 31)
graph.set_heuristic("Kemise", 33)
graph.set_heuristic("Dessie", 50)
graph.set_heuristic("Woldia", 53)
graph.set_heuristic("Alamata", 59)
graph.set_heuristic("Mekelle", 58)
graph.set_heuristic("Adigrat", 62)
graph.set_heuristic("Adwa", 65)
graph.set_heuristic("Axum", 67)
graph.set_heuristic("Shire", 66)
graph.set_heuristic("Debarke", 60)
graph.set_heuristic("Gondar", 56)
graph.set_heuristic("Bahir Dar", 48)
graph.set_heuristic("Debre Tabor", 52)
graph.set_heuristic("Lalibela", 57)
graph.set_heuristic("Sekota", 59)
graph.set_heuristic("Samara", 42)
graph.set_heuristic("Gabi Rasu", 32)
graph.set_heuristic("Dire Dawa", 31)
graph.set_heuristic("Harar", 35)
graph.set_heuristic("Babile", 37)
graph.set_heuristic("Jijiga", 40)
graph.set_heuristic("Degehabur", 45)
graph.set_heuristic("Kebri Dehar", 40)
graph.set_heuristic("Gode", 35)
graph.set_heuristic("Dollo", 18)
graph.set_heuristic("Moyale", 0)
graph.set_heuristic("Nairobi", 22)


start_state = "Addis Ababa"
goal_state = "Moyale"
path_cost, path = graph.a_star_search(start_state, goal_state)
print("A* Path from Addis Ababa to Moyale:", path, "with total cost:", path_cost)
